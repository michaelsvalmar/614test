name: "Terraform"

on:
  workflow_dispatch:
    inputs:
      # Terraform action you want to perform
      action:
        description: 'Terraform Action to Perform'
        type: choice
        options:
        - Terraform_apply
        - Terraform_destroy

jobs:
  terraform_apply:
    name: "Terraform_apply"
    if: ${{ github.event.inputs.action == 'Terraform_apply' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
      
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Secret variable
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Secret variable
          aws-region: ${{ vars.AWS_REGION }}  # Reference the repository variable

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: false
   
      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Init
        run: terraform apply -auto-approve
  
  terraform_destroy:
    name: "Terraform_destroy"
    if: ${{ github.event.inputs.action == 'Terraform_destroy' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.event.inputs.resource }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

        - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2

      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Secret variable
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Secret variable
        aws-region: ${{ vars.AWS_REGION }}  # Reference the repository variable

    - name: AWS Plan Copy
    # Copy state file over from S3 bucket
      run: aws s3 cp s3://mz-swen514-terraform/tfstate . 
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.2
      with:
        terraform_version: 1.1.9
        terraform_wrapper: false
        
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Destroy
      id: destroy
      run: terraform destroy -auto-approve

    - name: Delete plan file
      if: steps.destroy.outcome == 'success'
      # Add your own state file here
      run: aws s3 rm s3://mz-swen514-terraform/tfstate 
      
